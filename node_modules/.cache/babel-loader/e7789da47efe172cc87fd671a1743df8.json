{"ast":null,"code":"import _classCallCheck from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CitySearch=/*#__PURE__*/function(_Component){_inherits(CitySearch,_Component);var _super=_createSuper(CitySearch);function CitySearch(){var _this;_classCallCheck(this,CitySearch);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',suggestions:[],showSuggestions:undefined};_this.handleInputChanged=function(event){var value=event.target.value;var suggestions=_this.props.locations.filter(function(location){return location.toUpperCase().indexOf(value.toUpperCase())>-1;});_this.setState({query:value,suggestions:suggestions});};_this.handleItemClicked=function(suggestion){_this.setState({query:suggestion,showSuggestions:false});_this.props.updateEvents(suggestion);};return _this;}_createClass(CitySearch,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"CitySearch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city\",value:this.state.query,onChange:this.handleInputChanged,onFocus:function onFocus(){_this2.setState({showSuggestions:true});}}),/*#__PURE__*/_jsxs(\"ul\",{className:\"suggestions\",style:this.state.showSuggestions?{}:{display:'none'},children:[this.state.suggestions.map(function(suggestion){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked(suggestion);},children:suggestion},suggestion);}),/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked(\"all\");},children:/*#__PURE__*/_jsx(\"b\",{children:\"See all cities\"})})]})]});}}]);return CitySearch;}(Component);export default CitySearch;","map":{"version":3,"sources":["/Users/omar/Documents/CF-AG/meet/src/CitySearch.js"],"names":["React","Component","CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","display","map"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,U,2UAEFC,K,CAAQ,CACJC,KAAK,CAAE,EADH,CAEJC,WAAW,CAAE,EAFT,CAGJC,eAAe,CAAEC,SAHb,C,OAMNC,kB,CAAqB,SAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,GAAML,CAAAA,WAAW,CAAG,MAAKO,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,SAACC,QAAD,CAAc,CAC1D,MAAOA,CAAAA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+BP,KAAK,CAACM,WAAN,EAA/B,EAAsD,CAAC,CAA9D,CACD,CAFiB,CAApB,CAGA,MAAKE,QAAL,CAAc,CACVd,KAAK,CAAEM,KADG,CAEVL,WAAW,CAAXA,WAFU,CAAd,EAID,C,OAEDc,iB,CAAoB,SAACC,UAAD,CAAgB,CAClC,MAAKF,QAAL,CAAc,CACZd,KAAK,CAAEgB,UADK,CAEZd,eAAe,CAAE,KAFL,CAAd,EAKA,MAAKM,KAAL,CAAWS,YAAX,CAAwBD,UAAxB,EACD,C,4DAEL,iBAAS,iBACP,mBACE,aAAK,SAAS,CAAC,YAAf,wBACI,cACF,IAAI,CAAC,MADH,CAEF,SAAS,CAAC,MAFR,CAGF,KAAK,CAAE,KAAKjB,KAAL,CAAWC,KAHhB,CAIF,QAAQ,CAAE,KAAKI,kBAJb,CAKF,OAAO,CAAE,kBAAM,CAAE,MAAI,CAACU,QAAL,CAAc,CAAEZ,eAAe,CAAE,IAAnB,CAAd,EAA0C,CALzD,EADJ,cAQA,YAAI,SAAS,CAAC,aAAd,CAA4B,KAAK,CAAE,KAAKH,KAAL,CAAWG,eAAX,CAA6B,EAA7B,CAAiC,CAAEgB,OAAO,CAAE,MAAX,CAApE,WACG,KAAKnB,KAAL,CAAWE,WAAX,CAAuBkB,GAAvB,CAA2B,SAACH,UAAD,qBAC1B,WAEU,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuBC,UAAvB,CAAN,EAFnB,UAGUA,UAHV,EACeA,UADf,CAD0B,EAA3B,CADH,cAOM,WAAI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuB,KAAvB,CAAN,EAAb,uBACI,qCADJ,EAPN,GARA,GADF,CAsBD,C,wBAnDsBlB,S,EAsDzB,cAAeC,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n      }\n\n      handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n          });\n        this.setState({ \n            query: value,\n            suggestions, \n        });\n      };\n\n      handleItemClicked = (suggestion) => {\n        this.setState({\n          query: suggestion,\n          showSuggestions: false\n        });\n      \n        this.props.updateEvents(suggestion);\n      }\n      \n  render() {\n    return (\n      <div className=\"CitySearch\">\n          <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onChange={this.handleInputChanged}\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\n      />\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n        {this.state.suggestions.map((suggestion) => (\n          <li\n                    key={suggestion}\n                    onClick={() => this.handleItemClicked(suggestion)}\n                  >{suggestion}</li>\n                ))}\n            <li onClick={() => this.handleItemClicked(\"all\")}>\n                <b>See all cities</b>\n            </li>\n      </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}