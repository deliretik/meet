{"ast":null,"code":"import _classCallCheck from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/omar/Documents/CF-AG/meet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import'./App.css';import EventList from'./EventList';import CitySearch from'./CitySearch';import NumberOfEvents from'./NumberOfEvents';import{extractLocations,getEvents}from'./api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={events:[],locations:[]};_this.updateEvents=function(location){getEvents().then(function(events){var locationEvents=location==='all'?events:events.filter(function(event){return event.location===location;});_this.setState({events:locationEvents});});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.mounted=true;getEvents().then(function(events){if(_this2.mounted){_this2.setState({events:events,locations:extractLocations(events)});}});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.mounted=false;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(CitySearch,{locations:this.state.locations,updateEvents:this.updateEvents}),/*#__PURE__*/_jsx(EventList,{events:this.state.events}),/*#__PURE__*/_jsx(NumberOfEvents,{})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/omar/Documents/CF-AG/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","App","state","events","locations","updateEvents","location","then","locationEvents","filter","event","setState","mounted"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,gBAAT,CAA2BC,SAA3B,KAA4C,OAA5C,C,2FAGMC,CAAAA,G,+SACNC,K,CAAO,CACLC,MAAM,CAAE,EADH,CAELC,SAAS,CAAE,EAFN,C,OAKPC,Y,CAAe,SAACC,QAAD,CAAc,CAC3BN,SAAS,GAAGO,IAAZ,CAAiB,SAACJ,MAAD,CAAY,CAC3B,GAAMK,CAAAA,cAAc,CAAIF,QAAQ,GAAK,KAAd,CACvBH,MADuB,CAEvBA,MAAM,CAACM,MAAP,CAAc,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACJ,QAAN,GAAmBA,QAA9B,EAAd,CAFA,CAGA,MAAKK,QAAL,CAAc,CACZR,MAAM,CAAEK,cADI,CAAd,EAGD,CAPD,EAQD,C,gEAED,4BAAoB,iBAClB,KAAKI,OAAL,CAAe,IAAf,CACAZ,SAAS,GAAGO,IAAZ,CAAiB,SAACJ,MAAD,CAAY,CAC3B,GAAI,MAAI,CAACS,OAAT,CAAkB,CAChB,MAAI,CAACD,QAAL,CAAc,CAAER,MAAM,CAANA,MAAF,CAAUC,SAAS,CAAEL,gBAAgB,CAACI,MAAD,CAArC,CAAd,EACD,CACF,CAJD,EAKD,C,oCAED,+BAAsB,CACpB,KAAKS,OAAL,CAAe,KAAf,CACD,C,sBAEC,iBAAS,CACP,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,UAAD,EAAY,SAAS,CAAE,KAAKV,KAAL,CAAWE,SAAlC,CAA6C,YAAY,CAAE,KAAKC,YAAhE,EADF,cAEE,KAAC,SAAD,EAAW,MAAM,CAAE,KAAKH,KAAL,CAAWC,MAA9B,EAFF,cAGE,KAAC,cAAD,IAHF,GADF,CAOD,C,iBAtCeR,S,EAyClB,cAAeM,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\n\n\nclass App extends Component {\nstate= {\n  events: [],\n  locations: [],\n}\n\nupdateEvents = (location) => {\n  getEvents().then((events) => {\n    const locationEvents = (location === 'all') ?\n    events :\n    events.filter((event) => event.location === location);\n    this.setState({\n      events: locationEvents\n    });\n  });\n}\n\ncomponentDidMount() {\n  this.mounted = true;\n  getEvents().then((events) => {\n    if (this.mounted) {\n      this.setState({ events, locations: extractLocations(events) });\n    }\n  });\n}\n\ncomponentWillUnmount(){\n  this.mounted = false;\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}